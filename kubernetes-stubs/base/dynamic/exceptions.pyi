# Code generated by `stubgen`. DO NOT EDIT.
from _typeshed import Incomplete
from kubernetes.client.rest import ApiException as ApiException

def api_exception(e): ...

class DynamicApiError(ApiException):
    status: Incomplete
    reason: Incomplete
    body: Incomplete
    headers: Incomplete
    original_traceback: Incomplete
    def __init__(self, e, tb: Incomplete | None = None) -> None: ...
    def summary(self): ...

class ResourceNotFoundError(Exception): ...
class ResourceNotUniqueError(Exception): ...
class KubernetesValidateMissing(Exception): ...
class BadRequestError(DynamicApiError): ...
class UnauthorizedError(DynamicApiError): ...
class ForbiddenError(DynamicApiError): ...
class NotFoundError(DynamicApiError): ...
class MethodNotAllowedError(DynamicApiError): ...
class ConflictError(DynamicApiError): ...
class GoneError(DynamicApiError): ...
class UnprocessibleEntityError(DynamicApiError): ...
class TooManyRequestsError(DynamicApiError): ...
class InternalServerError(DynamicApiError): ...
class ServiceUnavailableError(DynamicApiError): ...
class ServerTimeoutError(DynamicApiError): ...
