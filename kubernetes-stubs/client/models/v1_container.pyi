# Code generated by `stubgen`. DO NOT EDIT.
from _typeshed import Incomplete
from kubernetes.client.configuration import Configuration as Configuration

class V1Container:
    openapi_types: Incomplete
    attribute_map: Incomplete
    local_vars_configuration: Incomplete
    discriminator: Incomplete
    def __init__(self, args: Incomplete | None = None, command: Incomplete | None = None, env: Incomplete | None = None, env_from: Incomplete | None = None, image: Incomplete | None = None, image_pull_policy: Incomplete | None = None, lifecycle: Incomplete | None = None, liveness_probe: Incomplete | None = None, name: Incomplete | None = None, ports: Incomplete | None = None, readiness_probe: Incomplete | None = None, resources: Incomplete | None = None, security_context: Incomplete | None = None, startup_probe: Incomplete | None = None, stdin: Incomplete | None = None, stdin_once: Incomplete | None = None, termination_message_path: Incomplete | None = None, termination_message_policy: Incomplete | None = None, tty: Incomplete | None = None, volume_devices: Incomplete | None = None, volume_mounts: Incomplete | None = None, working_dir: Incomplete | None = None, local_vars_configuration: Incomplete | None = None) -> None: ...
    @property
    def args(self): ...
    @args.setter
    def args(self, args) -> None: ...
    @property
    def command(self): ...
    @command.setter
    def command(self, command) -> None: ...
    @property
    def env(self): ...
    @env.setter
    def env(self, env) -> None: ...
    @property
    def env_from(self): ...
    @env_from.setter
    def env_from(self, env_from) -> None: ...
    @property
    def image(self): ...
    @image.setter
    def image(self, image) -> None: ...
    @property
    def image_pull_policy(self): ...
    @image_pull_policy.setter
    def image_pull_policy(self, image_pull_policy) -> None: ...
    @property
    def lifecycle(self): ...
    @lifecycle.setter
    def lifecycle(self, lifecycle) -> None: ...
    @property
    def liveness_probe(self): ...
    @liveness_probe.setter
    def liveness_probe(self, liveness_probe) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def ports(self): ...
    @ports.setter
    def ports(self, ports) -> None: ...
    @property
    def readiness_probe(self): ...
    @readiness_probe.setter
    def readiness_probe(self, readiness_probe) -> None: ...
    @property
    def resources(self): ...
    @resources.setter
    def resources(self, resources) -> None: ...
    @property
    def security_context(self): ...
    @security_context.setter
    def security_context(self, security_context) -> None: ...
    @property
    def startup_probe(self): ...
    @startup_probe.setter
    def startup_probe(self, startup_probe) -> None: ...
    @property
    def stdin(self): ...
    @stdin.setter
    def stdin(self, stdin) -> None: ...
    @property
    def stdin_once(self): ...
    @stdin_once.setter
    def stdin_once(self, stdin_once) -> None: ...
    @property
    def termination_message_path(self): ...
    @termination_message_path.setter
    def termination_message_path(self, termination_message_path) -> None: ...
    @property
    def termination_message_policy(self): ...
    @termination_message_policy.setter
    def termination_message_policy(self, termination_message_policy) -> None: ...
    @property
    def tty(self): ...
    @tty.setter
    def tty(self, tty) -> None: ...
    @property
    def volume_devices(self): ...
    @volume_devices.setter
    def volume_devices(self, volume_devices) -> None: ...
    @property
    def volume_mounts(self): ...
    @volume_mounts.setter
    def volume_mounts(self, volume_mounts) -> None: ...
    @property
    def working_dir(self): ...
    @working_dir.setter
    def working_dir(self, working_dir) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
