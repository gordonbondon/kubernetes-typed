# Code generated by `stubgen`. DO NOT EDIT.
from _typeshed import Incomplete
from kubernetes.client.configuration import Configuration as Configuration

class V1ContainerStatus:
    openapi_types: Incomplete
    attribute_map: Incomplete
    local_vars_configuration: Incomplete
    discriminator: Incomplete
    def __init__(self, container_id: Incomplete | None = None, image: Incomplete | None = None, image_id: Incomplete | None = None, last_state: Incomplete | None = None, name: Incomplete | None = None, ready: Incomplete | None = None, restart_count: Incomplete | None = None, started: Incomplete | None = None, state: Incomplete | None = None, local_vars_configuration: Incomplete | None = None) -> None: ...
    @property
    def container_id(self): ...
    @container_id.setter
    def container_id(self, container_id) -> None: ...
    @property
    def image(self): ...
    @image.setter
    def image(self, image) -> None: ...
    @property
    def image_id(self): ...
    @image_id.setter
    def image_id(self, image_id) -> None: ...
    @property
    def last_state(self): ...
    @last_state.setter
    def last_state(self, last_state) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def ready(self): ...
    @ready.setter
    def ready(self, ready) -> None: ...
    @property
    def restart_count(self): ...
    @restart_count.setter
    def restart_count(self, restart_count) -> None: ...
    @property
    def started(self): ...
    @started.setter
    def started(self, started) -> None: ...
    @property
    def state(self): ...
    @state.setter
    def state(self, state) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
