# Code generated by `stubgen`. DO NOT EDIT.
from kubernetes.client.configuration import Configuration as Configuration
from typing import Any

class V1ISCSIPersistentVolumeSource:
    openapi_types: Any
    attribute_map: Any
    local_vars_configuration: Any
    discriminator: Any
    def __init__(self, chap_auth_discovery: Any | None = ..., chap_auth_session: Any | None = ..., fs_type: Any | None = ..., initiator_name: Any | None = ..., iqn: Any | None = ..., iscsi_interface: Any | None = ..., lun: Any | None = ..., portals: Any | None = ..., read_only: Any | None = ..., secret_ref: Any | None = ..., target_portal: Any | None = ..., local_vars_configuration: Any | None = ...) -> None: ...
    @property
    def chap_auth_discovery(self): ...
    @chap_auth_discovery.setter
    def chap_auth_discovery(self, chap_auth_discovery) -> None: ...
    @property
    def chap_auth_session(self): ...
    @chap_auth_session.setter
    def chap_auth_session(self, chap_auth_session) -> None: ...
    @property
    def fs_type(self): ...
    @fs_type.setter
    def fs_type(self, fs_type) -> None: ...
    @property
    def initiator_name(self): ...
    @initiator_name.setter
    def initiator_name(self, initiator_name) -> None: ...
    @property
    def iqn(self): ...
    @iqn.setter
    def iqn(self, iqn) -> None: ...
    @property
    def iscsi_interface(self): ...
    @iscsi_interface.setter
    def iscsi_interface(self, iscsi_interface) -> None: ...
    @property
    def lun(self): ...
    @lun.setter
    def lun(self, lun) -> None: ...
    @property
    def portals(self): ...
    @portals.setter
    def portals(self, portals) -> None: ...
    @property
    def read_only(self): ...
    @read_only.setter
    def read_only(self, read_only) -> None: ...
    @property
    def secret_ref(self): ...
    @secret_ref.setter
    def secret_ref(self, secret_ref) -> None: ...
    @property
    def target_portal(self): ...
    @target_portal.setter
    def target_portal(self, target_portal) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
