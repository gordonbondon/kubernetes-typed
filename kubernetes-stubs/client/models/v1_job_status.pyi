from kubernetes.client.configuration import Configuration as Configuration
from typing import Any, Optional

class V1JobStatus:
    openapi_types: Any = ...
    attribute_map: Any = ...
    local_vars_configuration: Any = ...
    discriminator: Any = ...
    def __init__(self, active: Optional[Any] = ..., completion_time: Optional[Any] = ..., conditions: Optional[Any] = ..., failed: Optional[Any] = ..., start_time: Optional[Any] = ..., succeeded: Optional[Any] = ..., local_vars_configuration: Optional[Any] = ...) -> None: ...
    @property
    def active(self): ...
    @active.setter
    def active(self, active: Any) -> None: ...
    @property
    def completion_time(self): ...
    @completion_time.setter
    def completion_time(self, completion_time: Any) -> None: ...
    @property
    def conditions(self): ...
    @conditions.setter
    def conditions(self, conditions: Any) -> None: ...
    @property
    def failed(self): ...
    @failed.setter
    def failed(self, failed: Any) -> None: ...
    @property
    def start_time(self): ...
    @start_time.setter
    def start_time(self, start_time: Any) -> None: ...
    @property
    def succeeded(self): ...
    @succeeded.setter
    def succeeded(self, succeeded: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
