from kubernetes.client.configuration import Configuration as Configuration
from typing import Any, Optional

class V1NodeConfigStatus:
    openapi_types: Any = ...
    attribute_map: Any = ...
    local_vars_configuration: Any = ...
    discriminator: Any = ...
    def __init__(self, active: Optional[Any] = ..., assigned: Optional[Any] = ..., error: Optional[Any] = ..., last_known_good: Optional[Any] = ..., local_vars_configuration: Optional[Any] = ...) -> None: ...
    @property
    def active(self): ...
    @active.setter
    def active(self, active: Any) -> None: ...
    @property
    def assigned(self): ...
    @assigned.setter
    def assigned(self, assigned: Any) -> None: ...
    @property
    def error(self): ...
    @error.setter
    def error(self, error: Any) -> None: ...
    @property
    def last_known_good(self): ...
    @last_known_good.setter
    def last_known_good(self, last_known_good: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
