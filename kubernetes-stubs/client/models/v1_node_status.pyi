# Code generated by `stubgen`. DO NOT EDIT.
from _typeshed import Incomplete
from kubernetes.client.configuration import Configuration as Configuration

class V1NodeStatus:
    openapi_types: Incomplete
    attribute_map: Incomplete
    local_vars_configuration: Incomplete
    discriminator: Incomplete
    def __init__(self, addresses: Incomplete | None = None, allocatable: Incomplete | None = None, capacity: Incomplete | None = None, conditions: Incomplete | None = None, config: Incomplete | None = None, daemon_endpoints: Incomplete | None = None, images: Incomplete | None = None, node_info: Incomplete | None = None, phase: Incomplete | None = None, volumes_attached: Incomplete | None = None, volumes_in_use: Incomplete | None = None, local_vars_configuration: Incomplete | None = None) -> None: ...
    @property
    def addresses(self): ...
    @addresses.setter
    def addresses(self, addresses) -> None: ...
    @property
    def allocatable(self): ...
    @allocatable.setter
    def allocatable(self, allocatable) -> None: ...
    @property
    def capacity(self): ...
    @capacity.setter
    def capacity(self, capacity) -> None: ...
    @property
    def conditions(self): ...
    @conditions.setter
    def conditions(self, conditions) -> None: ...
    @property
    def config(self): ...
    @config.setter
    def config(self, config) -> None: ...
    @property
    def daemon_endpoints(self): ...
    @daemon_endpoints.setter
    def daemon_endpoints(self, daemon_endpoints) -> None: ...
    @property
    def images(self): ...
    @images.setter
    def images(self, images) -> None: ...
    @property
    def node_info(self): ...
    @node_info.setter
    def node_info(self, node_info) -> None: ...
    @property
    def phase(self): ...
    @phase.setter
    def phase(self, phase) -> None: ...
    @property
    def volumes_attached(self): ...
    @volumes_attached.setter
    def volumes_attached(self, volumes_attached) -> None: ...
    @property
    def volumes_in_use(self): ...
    @volumes_in_use.setter
    def volumes_in_use(self, volumes_in_use) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
