from kubernetes.client.configuration import Configuration as Configuration
from typing import Any, Optional

class V1NodeSystemInfo:
    openapi_types: Any = ...
    attribute_map: Any = ...
    local_vars_configuration: Any = ...
    discriminator: Any = ...
    def __init__(self, architecture: Optional[Any] = ..., boot_id: Optional[Any] = ..., container_runtime_version: Optional[Any] = ..., kernel_version: Optional[Any] = ..., kube_proxy_version: Optional[Any] = ..., kubelet_version: Optional[Any] = ..., machine_id: Optional[Any] = ..., operating_system: Optional[Any] = ..., os_image: Optional[Any] = ..., system_uuid: Optional[Any] = ..., local_vars_configuration: Optional[Any] = ...) -> None: ...
    @property
    def architecture(self): ...
    @architecture.setter
    def architecture(self, architecture: Any) -> None: ...
    @property
    def boot_id(self): ...
    @boot_id.setter
    def boot_id(self, boot_id: Any) -> None: ...
    @property
    def container_runtime_version(self): ...
    @container_runtime_version.setter
    def container_runtime_version(self, container_runtime_version: Any) -> None: ...
    @property
    def kernel_version(self): ...
    @kernel_version.setter
    def kernel_version(self, kernel_version: Any) -> None: ...
    @property
    def kube_proxy_version(self): ...
    @kube_proxy_version.setter
    def kube_proxy_version(self, kube_proxy_version: Any) -> None: ...
    @property
    def kubelet_version(self): ...
    @kubelet_version.setter
    def kubelet_version(self, kubelet_version: Any) -> None: ...
    @property
    def machine_id(self): ...
    @machine_id.setter
    def machine_id(self, machine_id: Any) -> None: ...
    @property
    def operating_system(self): ...
    @operating_system.setter
    def operating_system(self, operating_system: Any) -> None: ...
    @property
    def os_image(self): ...
    @os_image.setter
    def os_image(self, os_image: Any) -> None: ...
    @property
    def system_uuid(self): ...
    @system_uuid.setter
    def system_uuid(self, system_uuid: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
