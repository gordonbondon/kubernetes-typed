from kubernetes.client.configuration import Configuration as Configuration
from typing import Any, Optional

class V1alpha1Endpoint:
    openapi_types: Any = ...
    attribute_map: Any = ...
    local_vars_configuration: Any = ...
    discriminator: Any = ...
    def __init__(self, addresses: Optional[Any] = ..., conditions: Optional[Any] = ..., hostname: Optional[Any] = ..., target_ref: Optional[Any] = ..., topology: Optional[Any] = ..., local_vars_configuration: Optional[Any] = ...) -> None: ...
    @property
    def addresses(self): ...
    @addresses.setter
    def addresses(self, addresses: Any) -> None: ...
    @property
    def conditions(self): ...
    @conditions.setter
    def conditions(self, conditions: Any) -> None: ...
    @property
    def hostname(self): ...
    @hostname.setter
    def hostname(self, hostname: Any) -> None: ...
    @property
    def target_ref(self): ...
    @target_ref.setter
    def target_ref(self, target_ref: Any) -> None: ...
    @property
    def topology(self): ...
    @topology.setter
    def topology(self, topology: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
