from kubernetes.client.configuration import Configuration as Configuration
from typing import Any, Optional

class V1beta1LeaseSpec:
    openapi_types: Any = ...
    attribute_map: Any = ...
    local_vars_configuration: Any = ...
    discriminator: Any = ...
    def __init__(self, acquire_time: Optional[Any] = ..., holder_identity: Optional[Any] = ..., lease_duration_seconds: Optional[Any] = ..., lease_transitions: Optional[Any] = ..., renew_time: Optional[Any] = ..., local_vars_configuration: Optional[Any] = ...) -> None: ...
    @property
    def acquire_time(self): ...
    @acquire_time.setter
    def acquire_time(self, acquire_time: Any) -> None: ...
    @property
    def holder_identity(self): ...
    @holder_identity.setter
    def holder_identity(self, holder_identity: Any) -> None: ...
    @property
    def lease_duration_seconds(self): ...
    @lease_duration_seconds.setter
    def lease_duration_seconds(self, lease_duration_seconds: Any) -> None: ...
    @property
    def lease_transitions(self): ...
    @lease_transitions.setter
    def lease_transitions(self, lease_transitions: Any) -> None: ...
    @property
    def renew_time(self): ...
    @renew_time.setter
    def renew_time(self, renew_time: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
