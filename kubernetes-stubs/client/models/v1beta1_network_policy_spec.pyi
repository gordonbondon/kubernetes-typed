from kubernetes.client.configuration import Configuration as Configuration
from typing import Any, Optional

class V1beta1NetworkPolicySpec:
    openapi_types: Any = ...
    attribute_map: Any = ...
    local_vars_configuration: Any = ...
    discriminator: Any = ...
    def __init__(self, egress: Optional[Any] = ..., ingress: Optional[Any] = ..., pod_selector: Optional[Any] = ..., policy_types: Optional[Any] = ..., local_vars_configuration: Optional[Any] = ...) -> None: ...
    @property
    def egress(self): ...
    @egress.setter
    def egress(self, egress: Any) -> None: ...
    @property
    def ingress(self): ...
    @ingress.setter
    def ingress(self, ingress: Any) -> None: ...
    @property
    def pod_selector(self): ...
    @pod_selector.setter
    def pod_selector(self, pod_selector: Any) -> None: ...
    @property
    def policy_types(self): ...
    @policy_types.setter
    def policy_types(self, policy_types: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
