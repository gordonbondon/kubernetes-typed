# Code generated by `stubgen`. DO NOT EDIT.
from kubernetes.client.configuration import Configuration as Configuration
from typing import Any

class V1beta1ValidatingWebhook:
    openapi_types: Any
    attribute_map: Any
    local_vars_configuration: Any
    discriminator: Any
    def __init__(self, admission_review_versions: Any | None = ..., client_config: Any | None = ..., failure_policy: Any | None = ..., match_policy: Any | None = ..., name: Any | None = ..., namespace_selector: Any | None = ..., object_selector: Any | None = ..., rules: Any | None = ..., side_effects: Any | None = ..., timeout_seconds: Any | None = ..., local_vars_configuration: Any | None = ...) -> None: ...
    @property
    def admission_review_versions(self): ...
    @admission_review_versions.setter
    def admission_review_versions(self, admission_review_versions) -> None: ...
    @property
    def client_config(self): ...
    @client_config.setter
    def client_config(self, client_config) -> None: ...
    @property
    def failure_policy(self): ...
    @failure_policy.setter
    def failure_policy(self, failure_policy) -> None: ...
    @property
    def match_policy(self): ...
    @match_policy.setter
    def match_policy(self, match_policy) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, name) -> None: ...
    @property
    def namespace_selector(self): ...
    @namespace_selector.setter
    def namespace_selector(self, namespace_selector) -> None: ...
    @property
    def object_selector(self): ...
    @object_selector.setter
    def object_selector(self, object_selector) -> None: ...
    @property
    def rules(self): ...
    @rules.setter
    def rules(self, rules) -> None: ...
    @property
    def side_effects(self): ...
    @side_effects.setter
    def side_effects(self, side_effects) -> None: ...
    @property
    def timeout_seconds(self): ...
    @timeout_seconds.setter
    def timeout_seconds(self, timeout_seconds) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
