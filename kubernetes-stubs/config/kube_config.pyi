# Code generated by `stubgen`. DO NOT EDIT.
from .config_exception import ConfigException as ConfigException
from .dateutil import UTC as UTC, format_rfc3339 as format_rfc3339, parse_rfc3339 as parse_rfc3339
from kubernetes.client import ApiClient as ApiClient, Configuration as Configuration
from kubernetes.config.exec_provider import ExecProvider as ExecProvider
from typing import Any, Optional

EXPIRY_SKEW_PREVENTION_DELAY: Any
KUBE_CONFIG_DEFAULT_LOCATION: Any
ENV_KUBECONFIG_PATH_SEPARATOR: Any

class FileOrData:
    def __init__(self, obj: Any, file_key_name: Any, data_key_name: Optional[Any] = ..., file_base_path: str = ..., base64_file_content: bool = ...) -> None: ...
    def as_file(self): ...
    def as_data(self): ...

class CommandTokenSource:
    def __init__(self, cmd: Any, args: Any, tokenKey: Any, expiryKey: Any) -> None: ...
    def token(self): ...

class KubeConfigLoader:
    def __init__(self, config_dict: Any, active_context: Optional[Any] = ..., get_google_credentials: Optional[Any] = ..., config_base_path: str = ..., config_persister: Optional[Any] = ...): ...
    def set_active_context(self, context_name: Optional[Any] = ...) -> None: ...
    def load_and_set(self, client_configuration: Any) -> None: ...
    def list_contexts(self): ...
    @property
    def current_context(self): ...

class ConfigNode:
    name: Any = ...
    value: Any = ...
    path: Any = ...
    def __init__(self, name: Any, value: Any, path: Optional[Any] = ...) -> None: ...
    def __contains__(self, key: Any): ...
    def __len__(self): ...
    def safe_get(self, key: Any): ...
    def __getitem__(self, key: Any): ...
    def get_with_name(self, name: Any, safe: bool = ...): ...

class KubeConfigMerger:
    paths: Any = ...
    config_files: Any = ...
    config_merged: Any = ...
    def __init__(self, paths: Any) -> None: ...
    @property
    def config(self): ...
    def load_config(self, path: Any) -> None: ...
    config_saved: Any = ...
    def save_changes(self) -> None: ...
    def save_config(self, path: Any) -> None: ...

def list_kube_config_contexts(config_file: Optional[Any] = ...): ...
def load_kube_config(config_file: Optional[Any] = ..., context: Optional[Any] = ..., client_configuration: Optional[Any] = ..., persist_config: bool = ...) -> None: ...
def load_kube_config_from_dict(config_dict: Any, context: Optional[Any] = ..., client_configuration: Optional[Any] = ..., persist_config: bool = ...) -> None: ...
def new_client_from_config(config_file: Optional[Any] = ..., context: Optional[Any] = ..., persist_config: bool = ...): ...
