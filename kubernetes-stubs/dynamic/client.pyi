# Code generated by `stubgen`. DO NOT EDIT.
from .discovery import EagerDiscoverer as EagerDiscoverer, LazyDiscoverer as LazyDiscoverer
from .resource import Resource as Resource, ResourceField as ResourceField, ResourceInstance as ResourceInstance, ResourceList as ResourceList, Subresource as Subresource
from typing import Any

class VersionNotSupportedError(NotImplementedError): ...

class DynamicClient:
    client: Any
    configuration: Any
    def __init__(self, client, cache_file: Any | None = ..., discoverer: Any | None = ...) -> None: ...
    @property
    def resources(self): ...
    @property
    def version(self): ...
    def ensure_namespace(self, resource, namespace, body): ...
    def serialize_body(self, body): ...
    def get(self, resource, name: Any | None = ..., namespace: Any | None = ..., **kwargs): ...
    def create(self, resource, body: Any | None = ..., namespace: Any | None = ..., **kwargs): ...
    def delete(self, resource, name: Any | None = ..., namespace: Any | None = ..., body: Any | None = ..., label_selector: Any | None = ..., field_selector: Any | None = ..., **kwargs): ...
    def replace(self, resource, body: Any | None = ..., name: Any | None = ..., namespace: Any | None = ..., **kwargs): ...
    def patch(self, resource, body: Any | None = ..., name: Any | None = ..., namespace: Any | None = ..., **kwargs): ...
    def watch(self, resource, namespace: Any | None = ..., name: Any | None = ..., label_selector: Any | None = ..., field_selector: Any | None = ..., resource_version: Any | None = ..., timeout: Any | None = ..., watcher: Any | None = ...) -> None: ...
    def request(self, method, path, body: Any | None = ..., **params): ...
    def validate(self, definition, version: Any | None = ..., strict: bool = ...): ...
