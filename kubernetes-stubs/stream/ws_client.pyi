# Code generated by `stubgen`. DO NOT EDIT.
from collections import namedtuple
from kubernetes.client.rest import ApiException as ApiException, ApiValueError as ApiValueError
from typing import Any, Optional

STDIN_CHANNEL: int
STDOUT_CHANNEL: int
STDERR_CHANNEL: int
ERROR_CHANNEL: int
RESIZE_CHANNEL: int

class _IgnoredIO:
    def write(self, _x: Any) -> None: ...
    def getvalue(self) -> None: ...

class WSClient:
    sock: Any = ...
    def __init__(self, configuration: Any, url: Any, headers: Any, capture_all: Any) -> None: ...
    def peek_channel(self, channel: Any, timeout: int = ...): ...
    def read_channel(self, channel: Any, timeout: int = ...): ...
    def readline_channel(self, channel: Any, timeout: Optional[Any] = ...): ...
    def write_channel(self, channel: Any, data: Any) -> None: ...
    def peek_stdout(self, timeout: int = ...): ...
    def read_stdout(self, timeout: Optional[Any] = ...): ...
    def readline_stdout(self, timeout: Optional[Any] = ...): ...
    def peek_stderr(self, timeout: int = ...): ...
    def read_stderr(self, timeout: Optional[Any] = ...): ...
    def readline_stderr(self, timeout: Optional[Any] = ...): ...
    def read_all(self): ...
    def is_open(self): ...
    def write_stdin(self, data: Any) -> None: ...
    def update(self, timeout: int = ...) -> None: ...
    def run_forever(self, timeout: Optional[Any] = ...) -> None: ...
    @property
    def returncode(self): ...
    def close(self, **kwargs: Any) -> None: ...

WSResponse = namedtuple('WSResponse', ['data'])

class PortForward:
    websocket: Any = ...
    local_ports: Any = ...
    def __init__(self, websocket: Any, ports: Any) -> None: ...
    @property
    def connected(self): ...
    def socket(self, port_number: Any): ...
    def error(self, port_number: Any): ...
    def close(self) -> None: ...
    class _Port:
        port_number: Any = ...
        channel: Any = ...
        socket: Any = ...
        data: bytes = ...
        error: Any = ...
        def __init__(self, ix: Any, port_number: Any) -> None: ...
        class _Socket:
            def __init__(self, socket: Any) -> None: ...
            def __getattr__(self, name: Any): ...
            def setsockopt(self, level: Any, optname: Any, value: Any) -> None: ...

def get_websocket_url(url: Any, query_params: Optional[Any] = ...): ...
def create_websocket(configuration: Any, url: Any, headers: Optional[Any] = ...): ...
def websocket_call(configuration: Any, _method: Any, url: Any, **kwargs: Any): ...
def portforward_call(configuration: Any, _method: Any, url: Any, **kwargs: Any): ...
